# divineProtection is used to ignore projects.
# can be "*" to always ignore, or can include specific items so only those are ignored:
# "updater", "cleaner", "linter", "destroyer", and "prettifier" can be added
# can also be "disabled" to disable ignoring (you can also just remove the field)
# UNLESS IT'S "*" OR "disabled", IT MUST BE AN ARRAY, EVEN IF IT'S JUST ONE ITEM
divineProtection: ["updater"]

# if present, this SCRIPT will be used when you clean with the --lint flag
# IT MUST BE THE NAME OF A SCRIPT DEFINED IN THE "scripts" FIELD ON YOUR package.json
# when --lint is present but this not, we default to "eslint --fix ."
# doesn't work on Deno (no lint at all)
lintCmd: "lint"

# if present, this SCRIPT will be used when you clean with the --pretty flag
# again, must be a script. we default to "prettier ." if absent
# doesn't work on Deno (deno fmt will be used always, you can't override it)
prettyCmd: "prettier"

# if present, files / DIRs you add to "targets" will be removed
# (only when you clean with any of the "intensities")
destroy:
    intensities: [
        "hard",
        "maxim",
    ] # "normal", "hard", "hard-only", or "maxim". it's an array so you can add many. use always an array even if you only add one intensity. you can also pass "*" instead of typing all intensities.
    targets:
        - "node_modules"
        - "dist"

# if all these conditions are met:
# - commitActions is true
# - your git working tree was clean before fuckingnode touched it
# - you executed actions (like update, prettify...) that change the code somewhere
# we will auto run "git commit" with a default message
commitActions: true

# if present, overrides the default commit message
commitMessage: "F*ckingNodeâ„¢ v2 automated maintenance tasks"

# if present, overrides the default update command for your repo
# like lintCmd and prettyCmd, must be a script
updateCmdOverride: "dep:fix"

# flagless features allow you to run features on a specific project without requiring a feature flag
# so no need to use --lint each time
# their names are pretty descriptive, as you can see.
flagless:
    flaglessUpdate: true
    flaglessDestroy: true
    flaglessLint: true
    flaglessPretty: true
    flaglessCommit: true # if present, all safety checks still apply, but no --commit flag will be required. use with caution.

# ---
# feel free to copy this into your own fknode.yaml
# #FuckingNodeRocks
