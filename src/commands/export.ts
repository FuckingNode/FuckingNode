import type { TheExporterConstructedParams } from "./constructors/command.ts";
import { GetProjectEnvironment } from "../functions/projects.ts";
import { JoinPaths } from "../functions/filesystem.ts";
import { LogStuff, StringifyYaml } from "../functions/io.ts";
import { FULL_NAME } from "../constants.ts";
import { GetDateNow } from "../functions/date.ts";
import { APP_NAME } from "../constants/name.ts";
import { ColorString } from "../functions/color.ts";

export default async function TheExporter(params: TheExporterConstructedParams): Promise<void> {
    const env = await GetProjectEnvironment(params.project);

    const cpfString = params.jsonc === true ? JSON.stringify(env.main.cpf, undefined, 2) : StringifyYaml(env.main.cpf);

    const outFileName = params.jsonc === true ? "fknode-cpf.jsonc" : "fknode-cpf.yaml";

    const comment =
        `# ${APP_NAME.CASED} Common Package File\n# Generated by ${FULL_NAME}\n# This has been manually generated at ${GetDateNow()}.\n# Content here isn't synced with your project.`;

    const commentString = params.jsonc === true ? comment.replaceAll("#", "//") : comment;

    if (params.export) {
        Deno.writeTextFileSync(
            JoinPaths(env.root, outFileName),
            `${commentString}\n${cpfString}`,
        );
    }
    if (params.cli || !params.export) LogStuff(cpfString);
    LogStuff(
        params.export ? `${ColorString(outFileName, "bold")} file written successfully.` : "There's this project's FnCPF.",
        "tick",
        "bright-green",
    );
}
